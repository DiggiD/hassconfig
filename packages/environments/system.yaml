sensor:
  - platform: time_date
    display_options:
      - 'date'
      - 'time'
 #     - 'time_utc'

  - platform: systemmonitor
    resources:
      - type: last_boot
      - type: processor_use
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: disk_use_percent
        arg: /home
      - type: memory_use_percent
      - type: ipv4_address
        arg: eth0
      - type: network_in
        arg: eth0
      - type: network_out
        arg: eth0

  - platform: template
    sensors:
      uptime_host:
        friendly_name: Server Uptime
        icon_template: mdi:server
        value_template: >-
          {% set lb = states('sensor.last_boot') %}
          {% if lb != 'unknown' %}
            {% set seconds = (as_timestamp(now()) - as_timestamp(lb))|int %}
            {% set days = (seconds / 86400)|int %}
            {% set seconds = seconds % 86400 %}
            {% set hours = (seconds / 3600)|int %}
            {% set seconds = seconds % 3600 %}
            {% set minutes = (seconds / 60)|int %}
            {% set seconds = seconds % 60 %}
            {% if hours == 0 and minutes == 0 %}
              {{ time }} seconds
            {% else %}
              {%- if days > 0 -%}
                {%- if days == 1 -%}
                  1 day
                {%- else -%}
                  {{ days }} days
                {%- endif -%}
              {%- endif -%}
              {%- if hours > 0 and days < 7 -%}
                {%- if days > 0 -%}
                  {{ ', ' }}
                {%- endif -%}
                {%- if hours == 1 -%}
                  1 hour
                {%- else -%}
                  {{ hours }} hours
                {%- endif -%}
              {%- endif -%}
              {%- if days == 0 and minutes > 0 -%}
                {%- if hours > 0 -%}
                  {{ ', ' }}{{ minutes }} min
                {%- else -%}
                  {%- if minutes == 1 -%}
                    1 minute
                  {%- else -%}
                    {{ minutes }} minutes
                  {%- endif -%}
                {%- endif -%}
              {%- endif -%}
            {% endif %}
          {% else %}
            unknown
          {% endif %}


  - platform: command_line
    name: CPU Temp
    scan_interval: 60
    unit_of_measurement: Â°C
    command: >-
      if [ -e /sys/class/thermal/thermal_zone0/temp ]
        then cat /sys/class/thermal/thermal_zone0/temp
      fi
    value_template: >-
      {% if value != '' %}
        {{ value | multiply(0.001) | round }}
      {% else %}
        unknown
      {% endif %}

  - platform: uptime
    name: Uptime
    scan_interval: 60
    unit_of_measurement: hours

  - platform: template
    sensors:
      uptime_friendly:
        friendly_name: Uptime
        value_template: >-
          {% set uptime = states('sensor.uptime') | float(-1) %}
          {% if uptime >= 0 %}
            {% set time = (3600 * uptime) | int %}
            {% set minutes = ((time % 3600) / 60) | int %}
            {% set hours = ((time % 86400) / 3600) | int %}
            {% set days = (time / 86400) | int %}
            {% if time < 60 %}
              {{ time }} seconds
            {% else %}
              {%- if days > 0 -%}
                {%- if days == 1 -%}
                  1 day
                {%- else -%}
                  {{ days }} days
                {%- endif -%}
              {%- endif -%}
              {%- if hours > 0 and days < 7 -%}
                {%- if days > 0 -%}
                  {{ ', ' }}
                {%- endif -%}
                {%- if hours == 1 -%}
                  1 hour
                {%- else -%}
                  {{ hours }} hours
                {%- endif -%}
              {%- endif -%}
              {%- if days == 0 and minutes > 0 -%}
                {%- if hours > 0 -%}
                  {{ ', ' }}{{ minutes }} min
                {%- else -%}
                  {%- if minutes == 1 -%}
                    1 minute
                  {%- else -%}
                    {{ minutes }} minutes
                  {%- endif -%}
                {%- endif -%}
              {%- endif -%}
            {% endif %}
          {% else %}
            unknown
          {% endif %}

  - platform: template
    sensors:
      average_load:
        friendly_name: Average load
        unit_of_measurement: '%'
        value_template: >-
          {% set load1 = states('sensor.load_1m') | float(-1) %}
          {% set load5 = states('sensor.load_5m') | float(-1) %}
          {% set load15 = states('sensor.load_15m') | float(-1) %}
          {% if load1 > 0 and load5 > 0 and load15 > 0 %}
            {% set load1f = '{0:0.2f}'.format(load1) %}
            {% set load5f = '{0:0.2f}'.format(load5) %}
            {% set load15f = '{0:0.2f}'.format(load15) %}
            {{ load1f }} {{ load5f }} {{ load15f }}
          {% endif %}

  - platform: rpi_power
    text_state: true

  - platform: command_line
    name: CPU Cores
    scan_interval: 86400
    command: >-
      grep 'model name' /proc/cpuinfo | wc -l

  - platform: rest
    resource: https://pypi.python.org/pypi/homeassistant/json
    name: HASS Version Upstream
    value_template: "{{ value_json.info.version }}"
    scan_interval: 3600

  - platform: version
    name: HASS Version Installed

  - platform: template
    sensors:
      hass_version:
        value_template: "{%- if states.sensor.hass_version_upstream.state == states.sensor.hass_version_installed.state-%}{{states.sensor.hass_version_installed.state}} {% else %}{{states.sensor.hass_version_upstream.state}} Available{% endif%}"
        icon_template: >-
          {% if states.sensor.hass_version_upstream.state == states.sensor.hass_version_installed.state %}
            mdi:checkbox-marked
          {% else %}
            mdi:checkbox-blank-outline
          {% endif %}

  # - platform: filesize
  #   file_paths:
  #     - /config/home-assistant.log
  
  - platform: sql
    db_url: !secret mariadb_url
    queries:
      - name: DB size
        query: 'SELECT table_schema "homeassistant", Round(Sum(data_length + index_length) / 1073741824, 3) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: GB

  - platform: template
    sensors:
      log_size:
        friendly_name: Log Size
        unit_of_measurement: 'KiB'
        value_template: >-
          {% set size = state_attr('sensor.home_assistant_log', 'bytes') %}
          {% if size != None %}
            {{ (size / 1024) | round }}
          {% else %}
            unknown
          {% endif %}



automation:
  - id: rpi_power_issue
    alias: Power Problem Notification
    trigger:
    - platform: numeric_state
      entity_id: sensor.rpi_power_status
      value_template: '{{ state.attributes.value }}'
      above: 0
      for:
        minutes: 3
    condition:
    action:
    - service: persistent_notification.create
      data_template:
        message: "RPI Power reported {{ states.sensor.rpi_power_status.state }}. The state had changed from {{ trigger.from_state.state }} "
        title: RPI PSU Issue
    - service: notify.notify
      data_template:
        message: "RPI Power reported {{ states.sensor.rpi_power_status.state }}. The state had  changed from {{ trigger.from_state.state }}"
        title: RPI PSU Issue
    - service: ifttt.trigger
      data_template:
        event: Hass.io
        value1: "RPI Power reported {{ states.sensor.rpi_power_status.state }}."
  
  - alias: Shutdown Notification
    initial_state: 'on'
    id: '00'
    trigger:
      platform: homeassistant
      event: shutdown
    action:
      service: ifttt.trigger
      data:
        event: Hass.io
        value1: '!!OFFLINE!!'

  - alias: Startup Notification
    initial_state: 'on'
    id: '01'
    trigger:
      platform: homeassistant
      event: start
    action:
      service: ifttt.trigger
      data:
        event: Hass.io
        value1: 'I am Up!'